# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- Releases/*
- dev

pool:
  name: default

variables:
- name: solution
  value: '**/*.sln'
- name: buildConfiguration
- name: buildPlatform

stages:
- stage: Build
  jobs:
  - job: Build
    steps:

    - script: 'echo ##vso[task.setvariable variable=buildConfiguration]Release'

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'



- stage: Publish
  #condition: or(eq(variables.ForcePublish, 'true'), eq(variables.Build.SourceBranchName, 'master'))
  jobs:
  - job: Publish
    steps:

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'


  ######################
  ##       Winx64     ##
  ######################

    - script: |
        echo ##vso[task.setvariable variable=buildConfiguration]Release
        echo ##vso[task.setvariable variable=buildPlatform]win-x64
      displayName: '[Winx64-Release] Set Build Platform/Configuration'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '-r $(buildPlatform) -p:PublishSingleFile=true --self-contained true --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
        modifyOutputPath: false

    - script: |
        cd $(Build.ArtifactStagingDirectory)
        ren bountybot.exe BountyBot-$(buildPlatform).exe
      displayName: 'Rename Binary'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'


  ######################
  ##       Winx86     ##
  ######################

    - script: |
        echo ##vso[task.setvariable variable=buildConfiguration]Release
        echo ##vso[task.setvariable variable=buildPlatform]win-x86
      displayName: '[Winx86-Release] Set Build Platform/Configuration'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '-r $(buildPlatform) -p:PublishSingleFile=true --self-contained true --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
        modifyOutputPath: false

    - script: |
        cd $(Build.ArtifactStagingDirectory)
        ren bountybot.exe BountyBot-$(buildPlatform).exe
      displayName: 'Rename Binary'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'


  ######################
  ##     Linux-x64    ##
  ######################

    - script: |
        echo ##vso[task.setvariable variable=buildConfiguration]Release
        echo ##vso[task.setvariable variable=buildPlatform]linux-x64
      displayName: '[Linux-x64-Release] Set Build Platform/Configuration'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '-r $(buildPlatform) -p:PublishSingleFile=true --self-contained true --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
        modifyOutputPath: false

    - script: |
        cd $(Build.ArtifactStagingDirectory)
        ren bountybot BountyBot-$(buildPlatform)
      displayName: 'Rename Binary'


    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'


  ######################
  ##      Wrap-Up     ##
  ######################

    - task: DeleteFiles@1
      inputs:
        SourceFolder: '$(Build.ArtifactStagingDirectory)'
        Contents: '*.pdb'
      displayName: 'Strip Debugging Symbols'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop
      #condition: or( eq(variables.ForcePublish, 'true'), eq(variables.Build.Reason, 'IndividualCI'))
